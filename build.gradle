version = '0.1'

apply plugin: 'java'
apply plugin: 'application'

apply plugin: 'fatjar'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

mainClassName = 'nl.k3n.SimpleETL'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.2'
    }
}

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'nl.k3n.SimpleETL'
}

compileJava {
    //options.verbose = true
}

fatJarPrepareFiles {
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

fatJar {
    manifest {
        attributes("Implementation-Title": "SimpleETL", "Implementation-Version": version, 'Main-Class': mainClassName)
    }
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
    
    testLogging.showStandardStreams = true
}

task debug (dependsOn: [classes], type: JavaExec) {
    main = mainClassName
    classpath = project.sourceSets.main.runtimeClasspath
    standardInput = System.in
    debug = true
    args 'D:\\Downloads\\inspireadressen\\DoubleContainer.zip'
}
    
task run (dependsOn: [classes], type: JavaExec, overwrite: true) {
    main = mainClassName
    classpath = project.sourceSets.main.runtimeClasspath
    standardInput = System.in
    debug = false
    minHeapSize = "2048m"
    maxHeapSize = "4096m"
    args 'D:\\Downloads\\inspireadressen.zip'
    //args 'D:\\Downloads\\inspireadressen\\TripleContainer.zip'
    //args 'D:\\Downloads\\inspireadressen\\SingleContainer.zip'
    //args 'D:\\Downloads\\inspireadressen\\DoubleContainer.zip'
}

repositories {
    mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
    maven {
        url 'http://repo.deegree.org/content/repositories/public/'
    }
}

dependencies {
    compile 'commons-cli:commons-cli:1.2'
    compile 'com.google.guava:guava:16.0.1'
    compile 'com.fasterxml:aalto-xml:0.9.9'
    compile 'org.deegree:deegree-core-base:3.3.9'
    compile 'org.postgresql:postgresql:9.3-1101-jdbc41'
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
    testCompile group: 'junit', name: 'junit', version: '4.10'
}
